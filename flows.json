[{"id":"d809a3fb.a012","type":"tab","label":"InfluxDB 2.0","disabled":false,"info":""},{"id":"dd9f627c.59334","type":"function","z":"d809a3fb.a012","name":"Power","func":"// Authored by Michael Thompson on 30/12/2020\nconst topicArray = [\"power/voltage\",\"power/amp\",\"power/mA\",\"power/loadvoltage\",\"power/loadpower\",\"power/loadpowermw\",\"power/loadamps\",\"power/loadmA\"];\nconst nullArray = new Array(topicArray.length).fill(null);\n\n// Get index of topic in array\nvar index = topicArray.findIndex(topic => topic === msg.topic);\n\n// If the topic is in the topicArray, assign it to the same index in nullArray and create\n// a flow variable\nif (index != -1) {\n    nullArray[index] = msg;\n    flow.set(msg.topic,parseFloat(msg.payload));\n}\n\n// eg [msg,null,null,null,null,null,null,null]\nreturn nullArray;\n\n/*\n// Martin Hannah Code\n// voltage is a mux pin reading 0-25VAC/DC using sensor board\nif (topic==\"power/voltage\") {\n    flow.set(\"power/voltage\",parseFloat(msg.payload));\n    return [msg,null,null,null,null,null,null,null];\n}\n// ACR is the amp mamp topics\nif (topic==\"power/amp\") {\n    flow.set(\"power/amp\",parseFloat(msg.payload));\n    return [null,msg,null,null,null,null,null,null];\n}\nif (topic==\"power/mA\") {\n    flow.set(\"power/mA\",parseFloat(msg.payload));\n    return [null,null,msg,null,null,null,null,null];\n}\n// INA219 is the loadxxx topics\nif (topic==\"power/loadvoltage\") {\n    flow.set(\"power/loadvoltage\",parseFloat(msg.payload));\n    return [null,null,null,msg,null,null,null,null];\n}\nif (topic==\"power/loadpower\") {\n    flow.set(\"power/loadpower\",parseFloat(msg.payload));\n    return [null,null,null,null,msg,null,null,null];\n}\nif (topic==\"power/loadpowermw\") {\n    flow.set(\"power/loadpowermw\",parseFloat(msg.payload));\n    return [null,null,null,null,null,msg,null,null];\n}\nif (topic==\"power/loadamps\") {\n    flow.set(\"power/loadamps\",parseFloat(msg.payload));\n    return [null,null,null,null,null,null,msg,null];\n}\nif (topic==\"power/loadmA\") {\n    flow.set(\"power/loadmA\",parseFloat(msg.payload));\n    return [null,null,null,null,null,null,null,msg];\n} \n*/\n","outputs":8,"noerr":0,"x":270,"y":3980,"wires":[[],[],[],[],[],[],[],[]]},{"id":"fdffa349.faeb7","type":"inject","z":"d809a3fb.a012","name":"Inject every second","topic":"","payload":"","payloadType":"date","repeat":"1","crontab":"","once":false,"onceDelay":"0.1","x":660,"y":100,"wires":[["7e4d3c9b.e90054"]]},{"id":"bd9f373c.422cc8","type":"function","z":"d809a3fb.a012","name":"Water","func":"// Authored by Michael Thompson on 30/12/2020\nvar topicArray = [\"waterquality/ph\",\"waterquality/phrating\",\"waterquality/turbidity\",\"waterquality/turbidityvolts\",\"waterquality/turbidityvolts\",\"waterflow/tankwaterinlet\",\"watertemp00/temperature\",\"waterflow/gardenwaterinlet\",\"watertemp01/temperature\",\"waterlevel/fishtank/level\",\"waterlevel/2ndtank/level\",\"waterlevel/3rdtank/level\",\"waterlevel/fishtank/percentagefull\",\"waterlevel/2ndtank/percentagefull\",\"waterlevel/3rdtank/percentagefull\",\"waterlevel/fishtank/volume\",\"waterlevel/2ndtank/volume\",\"waterlevel/3rdtank/volume\",\"temperature00/degrees\",\"temperature01/degrees\",\"temperature03/degrees\",\"temperature03/degrees\",\"temperature04/degrees\"];\nconst nullArray = new Array(topicArray.length).fill(null);\n\n// Get index of topic in array\nvar index = topicArray.findIndex(topic => topic === msg.topic);\n\n// If the topic is in the topicArray, assign it to the same index in nullArray and create\n// a flow variable\nif (index != -1) {\n    nullArray[index] = msg;\n    flow.set(msg.topic,parseFloat(msg.payload));\n}\n\n// eg [null,msg,null,null,null,null,null,null,null,null,null,null,null,null,null]\nreturn nullArray;\n\n\n\n\n\n/*\n// Martin Hannah Code\nif (topic==\"waterquality/ph\") {\n    flow.set(\"waterquality/ph\",parseFloat(msg.payload));\n    return [msg,null,null,null,null,null,null,null,null,null,null,null,null,null,null];\n}\nif (topic==\"waterquality/phrating\") {\n    flow.set(\"waterquality/phrating\",parseFloat(msg.payload));\n    return [null,msg,null,null,null,null,null,null,null,null,null,null,null,null,null];\n}\nif (topic==\"waterquality/turbidity\") {\n    flow.set(\"waterquality/turbidity\",parseFloat(msg.payload));\n    return [null,null,msg,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];\n}\nif (topic==\"waterquality/turbidityvolts\") {\n    flow.set(\"waterquality/turbidityvolts\",parseFloat(msg.payload));\n    return [null,null,null,msg,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];\n}\nif (topic==\"waterflow/tankwaterinlet\") {\n    flow.set(\"waterflow/tankwaterinlet\",parseFloat(msg.payload));\n    return [null,null,null,null,msg,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];\n}\nif (topic==\"watertemp00/temperature\") {\n    flow.set(\"watertemp00/temperature\",parseFloat(msg.payload));\n    return [null,null,null,null,null,msg,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];\n}\nif (topic==\"waterflow/gardenwaterinlet\") {\n    flow.set(\"waterflow/gardenwaterinlet\",parseFloat(msg.payload));\n    return [null,null,null,null,null,null,msg,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];\n}\nif (topic==\"watertemp01/temperature\") {\n    flow.set(\"watertemp01/temperature\",parseFloat(msg.payload));\n    return [null,null,null,null,null,null,null,msg,null,null,null,null,null,null,null,null,null,null,null,null,null,null];\n}\nif (topic==\"waterlevel/fishtank/level\") {\n    flow.set(\"waterlevel/fishtank/level\",parseFloat(msg.payload));\n    return [null,null,null,null,null,null,null,null,msg,null,null,null,null,null,null,null,null,null,null,null,null,null];\n}\nif (topic==\"waterlevel/2ndtank/level\") {\n    flow.set(\"waterlevel/2ndtank/level\",parseFloat(msg.payload));\n    return [null,null,null,null,null,null,null,null,null,msg,null,null,null,null,null,null,null,null,null,null,null,null];\n}\nif (topic==\"waterlevel/3rdtank/level\") {\n    flow.set(\"waterlevel/3rdtank/level\",parseFloat(msg.payload));\n    return [null,null,null,null,null,null,null,null,null,null,msg,null,null,null,null,null,null,null,null,null,null,null];\n}\nif (topic==\"waterlevel/fishtank/percentagefull\") {\n    flow.set(\"waterlevel/fishtank/percentagefull\",parseFloat(msg.payload));\n    return [null,null,null,null,null,null,null,null,null,null,null,msg,null,null,null,null,null,null,null,null,null,null];\n}\nif (topic==\"waterlevel/2ndtank/percentagefull\") {\n    flow.set(\"waterlevel/2ndtank/percentagefull\",parseFloat(msg.payload));\n    return [null,null,null,null,null,null,null,null,null,null,null,null,msg,null,null,null,null,null,null,null,null,null];\n}\nif (topic==\"waterlevel/3rdtank/percentagefull\") {\n    flow.set(\"waterlevel/3rdtank/percentagefull\",parseFloat(msg.payload));\n    return [null,null,null,null,null,null,null,null,null,null,null,null,null,msg,null,null,null,null,null,null,null,null];\n}\nif (topic==\"waterlevel/fishtank/volume\") {\n    flow.set(\"waterlevel/fishtank/volume\",parseFloat(msg.payload));\n    return [null,null,null,null,null,null,null,null,null,null,null,null,null,null,msg,null,null,null,null,null,null,null];\n}\nif (topic==\"waterlevel/2ndtank/volume\") {\n    flow.set(\"waterlevel/2ndtank/volume\",parseFloat(msg.payload));\n    return [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,msg,null,null,null,null,null,null];\n}\nif (topic==\"waterlevel/3rdtank/volume\") {\n    flow.set(\"waterlevel/3rdtank/volume\",parseFloat(msg.payload));\n    return [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,msg,null,null,null,null,null];\n}\n\n// Add additional Tank temperature sensors (Potentually up to 12 Dallas Temperature sensors)\nif (topic==\"temperature00/degrees\") {\n    flow.set(\"temperature00/degrees\",parseFloat(msg.payload));\n    return [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,msg,null,null,null,null];\n}\nif (topic==\"temperature01/degrees\") {\n    flow.set(\"temperature01/degrees\",parseFloat(msg.payload));\n    return [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,msg,null,null,null];\n}\nif (topic==\"temperature02/degrees\") {\n    flow.set(\"temperature02/degrees\",parseFloat(msg.payload));\n    return [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,msg,null,null];\n}\nif (topic==\"temperature03/degrees\") {\n    flow.set(\"temperature03/degrees\",parseFloat(msg.payload));\n    return [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,msg,null];\n}\nif (topic==\"temperature04/degrees\") {\n    flow.set(\"temperature04/degrees\",parseFloat(msg.payload));\n    return [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,msg];\n} */","outputs":22,"noerr":0,"x":270,"y":4220,"wires":[[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[],[]]},{"id":"67705a4e.ba6be4","type":"comment","z":"d809a3fb.a012","name":"Get Sensor Data","info":"","x":100,"y":40,"wires":[]},{"id":"12938591.e6778a","type":"comment","z":"d809a3fb.a012","name":"Interpret Sensor Data","info":"https://run.mocky.io/v3/b4b2d93d-896c-4d37-b019-5228a61e2338\n\n\nhttps://run.mocky.io/v3/a70af699-0e98-4fe0-9142-7e4c0618f3fb\n\n\nhttps://run.mocky.io/v3/3bb9ba80-d57a-4200-a80b-72d37021e190","x":340,"y":40,"wires":[]},{"id":"1ccf74d3.3c547b","type":"comment","z":"d809a3fb.a012","name":"Send to InfluxDB 2.0","info":"","x":650,"y":40,"wires":[]},{"id":"32c3567a.0c7cca","type":"function","z":"d809a3fb.a012","name":"Rain/Soil","func":"var topic=msg.topic;\nif (topic==\"cyper/ESP12S006/soilcondition/moisture/0\") {\nreturn [msg,null,null,null,null,null,null,null,null,null,null,null];\n}\nif (topic==\"cyper/ESP12S006/soilcondition/moisture/1\") {\nreturn [null,msg,null,null,null,null,null,null,null,null,null,null];\n}\nif (topic==\"cyper/ESP12S006/soilcondition/moisture/2\") {\nreturn [null,null,msg,null,null,null,null,null,null,null,null,null];\n}\nif (topic==\"cyper/ESP12S006/soilcondition/moisture/3\") {\nreturn [null,null,null,msg,null,null,null,null,null,null,null,null];\n}\nif (topic==\"cyper/ESP12S006/rainfall/residualmoisture/0\") {\nreturn [null,null,null,null,msg,null,null,null,null,null,null,null];\n}\nif (topic==\"cyper/ESP12S006/rainfall/residualmoisture/1\") {\nreturn [null,null,null,null,null,msg,null,null,null,null,null,null];\n}\nif (topic==\"cyper/ESP12S006/rainfall/residualmoisture/2\") {\nreturn [null,null,null,null,null,null,msg,null,null,null,null,null];\n}\nif (topic==\"cyper/ESP12S006/rainfall/residualmoisture/3\") {\nreturn [null,null,null,null,null,null,null,msg,null,null,null,null];\n}\nif (topic==\"cyper/ESP12S006/soilcondition/temperature/0\") {\nreturn [null,null,null,null,null,null,null,null,msg,null,null,null];\n}\nif (topic==\"cyper/ESP12S006/soilcondition/temperature/1\") {\nreturn [null,null,null,null,null,null,null,null,null,msg,null,null];\n}\nif (topic==\"soilcondition/temperature/2\") {\nreturn [null,null,null,null,null,null,null,null,null,null,msg,null];\n}\nif (topic==\"soilcondition/temperature/3\") {\nreturn [null,null,null,null,null,null,null,null,null,null,null,msg];\n}","outputs":12,"noerr":0,"x":280,"y":4480,"wires":[[],[],[],[],[],[],[],[],[],[],[],[]]},{"id":"557506f7.9cf198","type":"function","z":"d809a3fb.a012","name":"Environ","func":"// Authored by Michael Thompson on 30/12/2020\nconst nullArray = [null,null,null,null,null,null,null,null,null,null,null];\nconst topicArray = \n[\"sound/loadness\",\n\"environment/temperature\",\n\"environment/avetemperature\",\n\"environment/humidity\",\n\"environment/abshumidity\",\n\"environment/heatindex\",\n\"environment/pressure\",\n\"environment/altitude\",\n\"uvindex/uvindex\",\n\"uvindex/uvrating\",\n\"proximity/movement\"];\n// Get index of topic in array\nvar index = topicArray.findIndex(topic => topic === msg.topic);\n\n// If the topic is in the topicArray, assign it to the same index in nullArray and create\n// a flow variable\nif (index != -1) {\n    nullArray[index] = msg;\n    flow.set(msg.topic,parseFloat(msg.payload));\n}\n\n// eg [msg,null,null,null,null,null,null,null,null,null,null]\nreturn nullArray;\n\n/*\n// Martin Hannah Code\nvar topic=msg.topic;\nif (topic==\"sound/loadness\") {\nreturn [msg,null,null,null,null,null,null,null,null,null,null];\n}\nif (topic==\"environment/temperature\") {\nreturn [null,msg,null,null,null,null,null,null,null,null,null];\n}\nif (topic==\"environment/avetemperature\") {\nreturn [null,null,msg,null,null,null],null,null,null,null,null;\n}\nif (topic==\"environment/humidity\") {\nreturn [null,null,null,msg,null,null,null,null,null,null,null];\n}\nif (topic==\"environment/abshumidity\") {\nreturn [null,null,null,null,msg,null,null,null,null,null,null];\n}\nif (topic==\"environment/heatindex\") {\nreturn [null,null,null,null,null,msg,null,null,null,null,null];\n}\nif (topic==\"environment/pressure\") {\nreturn [null,null,null,null,null,null,msg,null,null,null,null];\n}\nif (topic==\"environment/altitude\") {\nreturn [null,null,null,null,null,null,null,msg,null,null,null];\n}\nif (topic==\"uvindex/uvindex\") {\nreturn [null,null,null,null,null,null,null,null,msg,null,null];\n}\nif (topic==\"uvindex/uvrating\") {\nreturn [null,null,null,null,null,null,null,null,null,msg,null];\n}\nif (topic==\"proximity/movement\") {\nreturn [null,null,null,null,null,null,null,null,null,null,msg];\n} */","outputs":11,"noerr":0,"x":280,"y":4660,"wires":[[],[],[],[],[],[],[],[],[],[],["3ec580b3.a9026"]]},{"id":"3ec580b3.a9026","type":"function","z":"d809a3fb.a012","name":"Movement","func":"msg.color  = (msg.payload === \"true\")?\"orange\":\"white\";\nmsg.status = (msg.payload === \"true\")?\"\":\"idle\";\nreturn msg;","outputs":1,"noerr":0,"x":290,"y":4760,"wires":[[]]},{"id":"84fd77df.168b18","type":"function","z":"d809a3fb.a012","name":"Light","func":"// Authored by Michael Thompson on 30/12/2020\nconst nullArray = [null,null,null,null];\nconst topicArray = [\"light/ambientlight\",\"light/illuminance\",\"light/illuminance/01\",\"light/illuminance/02\"];\n// Get index of topic in array\nvar index = topicArray.findIndex(topic => topic === msg.topic);\n\n// If the topic is in the topicArray, assign it to the same index in nullArray and create\n// a flow variable\nif (index != -1) {\n    nullArray[index] = msg;\n    flow.set(msg.topic,parseFloat(msg.payload));\n}\n\n// eg [msg,null,null,null]\nreturn nullArray;\n\n\n/*\nvar topic=msg.topic;\nif (topic==\"light/ambientlight\") {\nreturn [msg,null,null,null];\n}\nif (topic==\"light/illuminance\") {\nreturn [null,msg,null,null];\n}\n// These two are spare slots filled with sample ..illuminence/01\nif (topic==\"light/illuminance/01\") {\nreturn [null,null,msg,null];\n}\nif (topic==\"light/illuminance/02\") {\nreturn [null,null,null,msg];\n} */","outputs":4,"noerr":0,"x":270,"y":4820,"wires":[[],[],[],[]]},{"id":"128d3752.58acc9","type":"function","z":"d809a3fb.a012","name":"Misc","func":"// ASK ABOUT DUPLICATE TOPICS\n\n// Authored by Michael Thompson on 30/12/2020\nvar nullArray = [null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null];\nvar topicArray = [\"waterquality/ph\",\"waterquality/phrating\",\"waterquality/turbidity\",\"waterquality/turbidityvolts\",\"waterquality/turbidityvolts\",\"waterflow/tankwaterinlet\",\"watertemp00/temperature\",\"waterflow/gardenwaterinlet\",\"watertemp01/temperature\",\"waterlevel/fishtank/level\",\"waterlevel/2ndtank/level\",\"waterlevel/3rdtank/level\",\"waterlevel/fishtank/percentagefull\",\"waterlevel/2ndtank/percentagefull\",\"waterlevel/3rdtank/percentagefull\",\"waterlevel/fishtank/volume\",\"waterlevel/2ndtank/volume\",\"waterlevel/3rdtank/volume\",\"temperature00/degrees\",\"temperature01/degrees\",\"temperature03/degrees\",\"temperature03/degrees\",\"temperature04/degrees\"];\n/*\"waterquality/phrating\"\n\"waterquality/turbidity\"\n\"waterquality/voltage\"\n\"temperature00/degrees\"\n\"temperature01/degrees\"\n\"temperature03/degrees\"\n\"mcu/heartbeat\"*/\nif (msg.topic==\"mcu/execlog\") {\n    msg.topic   = \"ExecutionLog\";\n    msg.payload = \"zzStart\" + msg.payload + \"\\n\";\n    //msg.payload = msg.payload.replace(\",\",'\\n');\n    msg.payload = msg.payload.replace(\"zzStart,\",'');\n    msg.payload = msg.payload.replace(\"OLEDnextPanel\",'OLED');\n    msg.payload = msg.payload.replace(\"hourlyScheduler\",'HourlySched');\n    msg.payload = msg.payload.replace(\"primaryScheduler\",'PrimarySched');\n    msg.payload = msg.payload.replace(\"Task1Scheduler\",'Sched1');\n    msg.payload = msg.payload.replace(\"Task2Scheduler\",'Sched2');\n    msg.payload = msg.payload.replace(\"Task3Scheduler\",'Sched3');\n    msg.payload = msg.payload.replace(\"Task4Scheduler\",'Sched4');\n    msg.payload = msg.payload.replace(\"Task5Scheduler\",'Sched5');\n    msg.payload = msg.payload.replace(\"pollProximity\",'Proximity');\n    msg.payload = msg.payload.replace(\"setRelay\",'Relays');\n    msg.payload = msg.payload.replace(\"BME\",'BMP280');\n    msg.payload = msg.payload.replace(/read/g,'');\n    return [msg,null,null,null,null,null,null,null];\n}\n\nelse {\n    // Get index of topic in array\n    var index = topicArray.findIndex(topic => topic === msg.topic);\n    \n    // If the topic is in the topicArray, assign it to the same index in nullArray and create\n    // a flow variable\n    if (index != -1) {\n        nullArray[index] = msg;\n        flow.set(msg.topic,parseFloat(msg.payload));\n    }\n    \n    // eg [null,msg,null,null,null,null,null,null,null,null,null,null,null,null,null]\n    return nullArray;    \n    \n    \n}\n\n\n\n\n\n\nif (topic==\"waterquality/phrating\") {\nreturn [null,msg,null,null,null,null,null,null];\n}\nif (topic==\"waterquality/turbidity\") {\nreturn [null,null,msg,null,null,null,null,null];\n}\nif (topic==\"waterquality/voltage\") {\nreturn [null,null,null,msg,null,null,null,null];\n}\n\nif (topic==\"temperature00/degrees\") {\nreturn [null,null,null,null,msg,null,null,null];\n}\nif (topic==\"temperature01/degrees\") {\nreturn [null,null,null,null,null,msg,null,null];\n}\nif (topic==\"temperature03/degrees\") {\nreturn [null,null,null,null,null,null,msg,null];\n}\nif (topic==\"mcu/heartbeat\") {\nreturn [null,null,null,null,null,null,null,msg];\n}","outputs":8,"noerr":0,"x":270,"y":4920,"wires":[[],[],[],[],[],[],[],[]]},{"id":"f68498c1.f2a248","type":"ui_gauge","z":"d809a3fb.a012","name":"Voltage","group":"9f621075.5922c","order":1,"width":0,"height":0,"gtype":"gage","title":"Voltage","label":"units","format":"{{value}}","min":0,"max":10,"colors":["#00b500","#e6e600","#ca3838"],"seg1":"3.4","seg2":"3.8","x":820,"y":320,"wires":[]},{"id":"bc2d6ab0.8d40c8","type":"ui_chart","z":"d809a3fb.a012","name":"CurrentMa","group":"c9722c8d.64dbd","order":2,"width":0,"height":0,"label":"Current(mA)","chartType":"line","legend":"false","xformat":"HH:mm:ss","interpolate":"linear","nodata":"","dot":false,"ymin":"","ymax":"","removeOlder":1,"removeOlderPoints":"","removeOlderUnit":"3600","cutout":0,"useOneColor":false,"useUTC":false,"colors":["#1f77b4","#aec7e8","#ff7f0e","#2ca02c","#98df8a","#d62728","#ff9896","#9467bd","#c5b0d5"],"useOldStyle":false,"outputs":1,"x":830,"y":360,"wires":[[]]},{"id":"19021ca8.3e9533","type":"ui_chart","z":"d809a3fb.a012","name":"Power","group":"c9722c8d.64dbd","order":3,"width":0,"height":0,"label":"Power","chartType":"line","legend":"false","xformat":"HH:mm:ss","interpolate":"linear","nodata":"","dot":false,"ymin":"","ymax":"","removeOlder":1,"removeOlderPoints":"","removeOlderUnit":"3600","cutout":0,"useOneColor":false,"colors":["#1f77b4","#aec7e8","#ff7f0e","#2ca02c","#98df8a","#d62728","#ff9896","#9467bd","#c5b0d5"],"useOldStyle":false,"outputs":2,"x":810,"y":400,"wires":[[],[]]},{"id":"aff23a16.0a4ae8","type":"ui_chart","z":"d809a3fb.a012","name":"Power(mW)","group":"c9722c8d.64dbd","order":4,"width":0,"height":0,"label":"Power(mW)","chartType":"line","legend":"false","xformat":"HH:mm:ss","interpolate":"linear","nodata":"","dot":false,"ymin":"","ymax":"","removeOlder":1,"removeOlderPoints":"","removeOlderUnit":"3600","cutout":0,"useOneColor":false,"colors":["#1f77b4","#aec7e8","#ff7f0e","#2ca02c","#98df8a","#d62728","#ff9896","#9467bd","#c5b0d5"],"useOldStyle":false,"outputs":2,"x":830,"y":440,"wires":[[],[]]},{"id":"5df617d6.aede48","type":"function","z":"d809a3fb.a012","name":"Output","func":"\nreturn msg;","outputs":8,"noerr":0,"x":610,"y":380,"wires":[["f68498c1.f2a248"],["bc2d6ab0.8d40c8"],["19021ca8.3e9533"],["aff23a16.0a4ae8"],[],[],[],[]]},{"id":"6a1e5730.c9e968","type":"comment","z":"d809a3fb.a012","name":"Node-Red Dashboard","info":"","x":660,"y":280,"wires":[]},{"id":"3a013a1c.98c0e6","type":"function","z":"d809a3fb.a012","name":"Set topicArrays","func":"// Authored by Michael Thompson on 4/1/21\n\nvar topics = msg.payload['topics'];\nvar topicArray = [];\n\nfor (var key in topics) {\n    topicArray.push(topics[key]);\n}\n\n// Instead of this, each array will contain a list of sensors associated with a \"group\" \n// and a MQTT device\nflow.set(\"topicArray\",topicArray);\n\nflow.set(\"powerArray\",topics['power']);\nflow.set(\"waterArray\",topics['water']);\n\n\nreturn msg;\n\n/*\nconst topicArray = [\n    // POWER\n    \"power/voltage\",\n    \"power/amp\",\n    \"power/mA\",\n    \"power/loadvoltage\",\n    \"power/loadpower\",\n    \"power/loadpowermw\",\n    \"power/loadamps\",\n    \"power/loadmA\",\n    // WATER\n    \"waterquality/ph\",\n    \"waterquality/phrating\",\n    \"waterquality/turbidity\",\n    \"waterquality/turbidityvolts\",\n    \"waterquality/turbidityvolts\",\n    \"waterflow/tankwaterinlet\",\n    \"watertemp00/temperature\",\n    \"waterflow/gardenwaterinlet\",\n    \"watertemp01/temperature\",\n    \"waterlevel/fishtank/level\",\n    \"waterlevel/2ndtank/level\",\n    \"waterlevel/3rdtank/level\",\n    \"waterlevel/fishtank/percentagefull\",\n    \"waterlevel/2ndtank/percentagefull\",\n    \"waterlevel/3rdtank/percentagefull\",\n    \"waterlevel/fishtank/volume\",\n    \"waterlevel/2ndtank/volume\",\n    \"waterlevel/3rdtank/volume\",\n    \"temperature00/degrees\",\n    \"temperature01/degrees\",\n    \"temperature03/degrees\",\n    \"temperature03/degrees\",\n    \"temperature04/degrees\"]; \n\nconst powerArray = [\n    \"power/voltage\",\n    \"power/amp\",\n    \"power/mA\",\n    \"power/loadvoltage\",\n    \"power/loadpower\",\n    \"power/loadpowermw\",\n    \"power/loadamps\",\n    \"power/loadmA\"];\n    \nconst waterArray = [\n    \"waterquality/ph\",\n    \"waterquality/phrating\",\n    \"waterquality/turbidity\",\n    \"waterquality/turbidityvolts\",\n    \"waterquality/turbidityvolts\",\n    \"waterflow/tankwaterinlet\",\n    \"watertemp00/temperature\",\n    \"waterflow/gardenwaterinlet\",\n    \"watertemp01/temperature\",\n    \"waterlevel/fishtank/level\",\n    \"waterlevel/2ndtank/level\",\n    \"waterlevel/3rdtank/level\",\n    \"waterlevel/fishtank/percentagefull\",\n    \"waterlevel/2ndtank/percentagefull\",\n    \"waterlevel/3rdtank/percentagefull\",\n    \"waterlevel/fishtank/volume\",\n    \"waterlevel/2ndtank/volume\",\n    \"waterlevel/3rdtank/volume\",\n    \"temperature00/degrees\",\n    \"temperature01/degrees\",\n    \"temperature03/degrees\",\n    \"temperature03/degrees\",\n    \"temperature04/degrees\"];\n\nconst miscArray = [];\n\n\n\nflow.set(\"powerArray\",powerArray);\nflow.set(\"waterArray\",waterArray);\nflow.set(\"miscArray\",miscArray); */","outputs":1,"noerr":0,"x":520,"y":3800,"wires":[[]]},{"id":"46890a2d.e614f4","type":"http request","z":"d809a3fb.a012","name":"GET topicArrays","method":"GET","ret":"obj","paytoqs":false,"url":"https://run.mocky.io/v3/3bb9ba80-d57a-4200-a80b-72d37021e190","tls":"","proxy":"","authType":"","x":280,"y":3800,"wires":[["3a013a1c.98c0e6"]]},{"id":"8ec6d9e5.0ee828","type":"function","z":"d809a3fb.a012","name":"Send New Group Data","func":"// Authored by Michael Thompson on 29/12/2020\n// Last updated by Michael Thompson on 5/1/2021\n\nvar group = msg.payload;//flow.get(\"groups\")[msg.index];\n\nmsg.payload = [];\n\n// Array of Sensor Values\nvalueArr = flow.get(group+\"Array\");\n\ndata = \"\";\n\n// InfluxDB measurement set to group name as defined by loop over groups array\nmsg.measurement = group;\n\n// For each sensor value, if the value is not set to \"undefined\" and contains new data, it is updated\n// in the JSON object\nvar value;\nvar send = false;\nfor (value of valueArr) \n    if (flow.get(group+value) !== undefined && !(isNaN(flow.get(group+value)[\"value\"])) && flow.get(group+value)[\"new\"] === true) {\n        // NOTE doesnt currently sent timestamp\n        // Lachlan: Configure host to contain details for device, \n        // OR find a way to omit host and still possess relevant information on Grafana dashboard.\n        data += \"\\n\"+group+\",host=host1 \"+value+\"=\"+flow.get(group+value)[\"value\"];\n        flow.set(group+value,{\"value\":flow.get(group+value)[\"value\"],\"new\":false});\n        //send = true;\n    }\n// String of most up-to-date sensor values seperated by new lines returned\nmsg.payload = data;\n/*\nif (send === true) {\n    msg.payload = data;\n    return msg;\n} */\n\n\n\n\n\n\n\nreturn msg;\n","outputs":1,"noerr":0,"x":660,"y":220,"wires":[["4b90c708.7350c8","7e4d3c9b.e90054","6696f7e3.0878c8"]]},{"id":"4b90c708.7350c8","type":"debug","z":"d809a3fb.a012","name":"Debug InfluxDB","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","x":900,"y":220,"wires":[]},{"id":"61aad54a.97a74c","type":"comment","z":"d809a3fb.a012","name":"OLD API implementation","info":"","x":310,"y":3700,"wires":[]},{"id":"525456f1.8a4f18","type":"comment","z":"d809a3fb.a012","name":"Add more devices here as necessary","info":"","x":160,"y":340,"wires":[]},{"id":"7e4d3c9b.e90054","type":"array-loop","z":"d809a3fb.a012","name":"Loop over Groups","key":"index","keyType":"msg","reset":true,"resetValue":"value-null","array":"groups","arrayType":"flow","x":650,"y":160,"wires":[[],["8ec6d9e5.0ee828"]]},{"id":"c84fc911.380cc8","type":"http request","z":"d809a3fb.a012","name":"","method":"use","ret":"txt","paytoqs":true,"url":"","tls":"","proxy":"","authType":"","x":910,"y":160,"wires":[["5feef2d6.857f3c"]]},{"id":"5feef2d6.857f3c","type":"debug","z":"d809a3fb.a012","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","x":1070,"y":180,"wires":[]},{"id":"6696f7e3.0878c8","type":"function","z":"d809a3fb.a012","name":"API Setup","func":"\ntoken = \"tG5EUmZxMguPu2yEpfaMTcICCQhdjgyIQKZBOe8JU6AF-C08BsFoDJvprRmerz2X6jD6iPzGISJLdmCdIOwHFQ==\"; \naddress = \"http://10.0.0.211:19086/api/v2/write\";\norganisation = \"cypernex\";\nbucket = \"cyperbucket\";\nprecision = \"s\";\n\nmsg.headers = {};\nmsg.method = \"POST\";\nmsg.url = address+\"?org=\"+organisation+\"&bucket=\"+bucket+\"&precision=\"+precision;\nmsg.headers = {\"Authorization\" : \"Token \" + token}\n\n//msg.payload = \"cyper/ESP12S008/,host=host1 mcu/taskschedule05/period=60\";\n//msg.payload = \"testhead,host=host1 meat_percent=64.43234543 1556896326\";\n\nif (msg.payload != [])\n    return msg;\n\nreturn;","outputs":1,"noerr":0,"x":900,"y":100,"wires":[["c84fc911.380cc8"]]},{"id":"19a1351b.93dabb","type":"function","z":"d809a3fb.a012","name":"Split Topic","func":"// Authored by Martin Hannah\n\n// split the topic into two parts\nvar parts = msg.topic.split('/');\nvar topic = '';\nvar base = '';\nvar n    = 0;\nfor (var i of parts) {\n    if (n > 1) {\n        topic = topic + i ;\n        if (i !== parts.length[i] ) {\n            topic = topic + '/';\n        }\n    }\n    n++;\n}\nbase = parts[0] + '/' + parts[1] + '/' ;\n\nflow.set('Devicepath', base);\nmsg.topic = topic.substring(0,topic.length - 1);\nmsg.base  = base;\n//msg.parts  = parts;\nreturn msg;","outputs":1,"noerr":0,"x":310,"y":100,"wires":[["8e1dfa.1a3b3208"]]},{"id":"8e1dfa.1a3b3208","type":"function","z":"d809a3fb.a012","name":"Update Topic Flow Variable ","func":"// Authored by Michael Thompson on 30/12/2020\n// Last updated by Michael Thompson on 5/1/2021\n\n// Updates flow array containing all topics\n// May or may not be necessary // \nconst topicArray = flow.get(\"topicArray\") || [];\nif ((topicArray.includes(msg.topic))===false)\n    topicArray.push(msg.topic);\nflow.set(\"topicArray\", topicArray);\n\n\nvar group = flow.get('Devicepath');\n\n// Updates flow containing for groups\nconst groups = flow.get(\"groups\") || [];\nif (!(groups.includes(group)))\n    groups.push(group);\nflow.set(\"groups\", groups);\n\n// Updates flow containing for topics within current group\nconst groupArray = flow.get(group+\"Array\") || [];\nif (!(groupArray.includes(msg.topic)) && !msg.topic.includes(\"$\"))\n    groupArray.push(msg.topic);\nflow.set(group+\"Array\",groupArray);\n\n// Updates flow variable for current group and topic\nflow.set(group+msg.topic,\n        // WILL NEED TO PARSE OTHER DATATYPES\n        // PARSING FLOAT BECAUSE FIRMWARE SENDS ALL DATA AS STRINGS\n        // WHICH CAUSES ERRORS WITH INFLUXDB TYPES\n        {\"value\":parseFloat(msg.payload),\n        // Bool for if data is new\n         \"new\":true\n        });\n\n","outputs":1,"noerr":0,"x":360,"y":160,"wires":[[]]},{"id":"d781a39d.858e3","type":"mqtt in","z":"d809a3fb.a012","name":"ESP","topic":"cyper/#","qos":"2","datatype":"auto","broker":"a0a384b2.b52d18","x":70,"y":100,"wires":[["19a1351b.93dabb","f42cb54f.ddfaf8"]]},{"id":"f42cb54f.ddfaf8","type":"debug","z":"d809a3fb.a012","name":"","active":false,"tosidebar":true,"console":false,"tostatus":false,"complete":"true","targetType":"full","x":140,"y":260,"wires":[]},{"id":"9065e5c4.7c8528","type":"comment","z":"d809a3fb.a012","name":"Diagnostic: Check for Invalid Code","info":"","x":1340,"y":180,"wires":[]},{"id":"3a155abd.7e5b06","type":"comment","z":"d809a3fb.a012","name":"Diagnostic: Check for Invalid Code","info":"","x":1340,"y":220,"wires":[]},{"id":"32f51f31.d8f5d","type":"comment","z":"d809a3fb.a012","name":"Lachlan Suggestions","info":"","x":1301,"y":140,"wires":[]},{"id":"9f621075.5922c","type":"ui_group","z":"","name":"Power utilization","tab":"c77a8e22.b2895","order":1,"disp":true,"width":"6","collapse":false},{"id":"c9722c8d.64dbd","type":"ui_group","z":"","name":"Power utilization","tab":"261e24eb.f7b19c","order":1,"disp":true,"width":"6","collapse":false},{"id":"a0a384b2.b52d18","type":"mqtt-broker","z":"","name":"Homeassistant","broker":"10.0.0.228","port":"1883","clientid":"NodeRed_MTDEV","usetls":false,"compatmode":true,"keepalive":"60","cleansession":true,"birthTopic":"","birthQos":"0","birthPayload":"","closeTopic":"","closePayload":"","willTopic":"","willQos":"0","willPayload":""},{"id":"c77a8e22.b2895","type":"ui_tab","z":"","name":"Aquaponics","icon":"dashboard","order":1,"disabled":false,"hidden":false},{"id":"261e24eb.f7b19c","type":"ui_tab","z":"","name":"Aquaponics","icon":"dashboard","order":1,"disabled":false,"hidden":false}]
